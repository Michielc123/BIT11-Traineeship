% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MatchBendability.R
\name{MatchBendability}
\alias{MatchBendability}
\title{Find sequences with similar bendability profiles}
\usage{
MatchBendability(query, scale, k, tolerance, wsize = NULL,
  output.list = F, random.out = F, size.cutoff = 20, frac = 0.2,
  lookup = NULL)
}
\arguments{
\item{query}{DNAString or a character string.}

\item{scale}{One from "con", "conrigid", "dnase", "dnaserigid", "nuc", "nucrigid".}

\item{k}{Number of consecutive trinucleotides for which to calculate the average
bendability coefficient.}

\item{tolerance}{All k-mers with average bendability coefficient which falls into
interval <query k-mer bendability +/- tolerance> are matched with query.}

\item{wsize}{Window size for calculations. Should be (n*k)+2. See Details.}

\item{output.list}{Applicable if wsize is set. Whether to output a list of
data.tables which contain matches for one window, or a single data.table
with full-length sequences. Defaults to FALSE.}

\item{random.out}{Whether to output all results (FALSE, default) or a random
selection (TRUE).}

\item{size.cutoff}{Applicable when random.out=TRUE. If a result has more than
size.cutoff matches, those matches are grouped by prefix-suffix combination and
a fraction of each group is chosen at random. Defaults to 20.}

\item{frac}{Applicable when random.out=TRUE (see above). For a group with x members,
size of fraction kept is defined as max(1, round(x*frac)). Defaults to 0.2.}

\item{lookup}{Optional. Output of function AllKmerLookup. If not supplied, the
function makes lookup table automatically for each run.}
}
\value{
Single data.table, or a list of data.tables:
\itemize{
 \item{sequence} : {sequence which matches bendability profile of query}
 \item{deltabend} : {cummulative difference between bendability coefficients of match and query}
 \item{strdist} : {generalized Levenshtein distance between match and query}
}
}
\description{
Calculates bendability profile of query sequence and finds all other sequences
which have similar (or same) profile.
}
\details{
Higher tolerance values are not recommended in combination with bigger k.

If parameter \strong{wsize} is set, query sequence will be split to chunks for processing.
That can speed up the execution and enable exporting results as a list, which is
useful in case a run with default parameters failed or took too long to finish.
Chunks are of length wsize, with a two-nucleotide overlap beetween consecutive
ones. Chosen value must satisfy the conditions \emph{wsize=(n*k)+2} and
\emph{length(query)>=2*wsize}. The downside is that last <wsize nucleotides of
query sequence will not be processed.

Setting \strong{output.list} to FALSE increases the runtime and memory consumption
dramatically, especially for longer sequences and higher tolerance values
respectively . If the execution failed with default parameters, try setting
output.list to TRUE, or processing your sequence in chunks.

Setting \strong{random.out} to TRUE will increase speed. Recommended if a random subset
of matches is enough for your application or a run with random.out=F already failed.

Lookup table depends only on parameters scale and k. If you plan to apply the
function on multiple sequences without changing those two parameters, providing
\strong{lookup} speeds up the process because the table doesn't have to be
created again for each run.
}
\examples{
MatchBendability("TGATTCCTAAAGTCA", "con", k=1, tolerance=0.5)
MatchBendability("TGATTCCTAAAGTCA", "con", k=3, tolerance=0.1)
}
