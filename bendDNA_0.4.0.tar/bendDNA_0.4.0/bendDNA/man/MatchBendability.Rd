% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MatchBendability.R
\name{MatchBendability}
\alias{MatchBendability}
\title{Find sequences with similar bendability profiles}
\usage{
MatchBendability(query, scale, k, tolerance, wsize = NULL,
  output.list = F, random.out = NULL, lookup = NULL)
}
\arguments{
\item{query}{DNAString or a character string.}

\item{scale}{One from "con", "conrigid", "dnase", "dnaserigid", "nuc", "nucrigid".}

\item{k}{Number of consecutive trinucleotides for which to calculate the average
bendability coefficient.}

\item{tolerance}{Determines size of interval for matching. All k-mers whose
average bendability coefficient  falls into interval <query k-mer bendability
+/- tolerance> are matched with query.}

\item{wsize}{Window size for calculations. Should be (n*k)+2. See Details.}

\item{output.list}{Applicable if wsize is set. Whether to output a list of
data.tables where each contains matches for one window, or a single
data.table with full-length sequences. Defaults to FALSE.}

\item{random.out}{If NULL (default): process and output all matches. If set to
value <0, 1>: matches in each window are grouped according to prefix-suffix
combinations and a fraction of each group is kept at random. Number of
retained matches in a group is determined as (size of group * random.out),
but never less than 1.}

\item{lookup}{Optional. Output of function LookupTable. If not supplied, the
function makes lookup table automatically for each run.}
}
\value{
Single three-column data.table, or a list of three-column data.tables:
\itemize{
 \item{sequence} : {sequence which matches bendability profile of query/query window}
 \item{deltabend} : {cummulative absolute difference between bendability coefficients of match and query/query window}
 \item{strdist} : {generalized Levenshtein distance between match and query/query window}
}
}
\description{
Calculates bendability profile of query sequence. Finds all other sequences
with same or similar bendability profile.
}
\details{
Higher tolerance values are not recommended in combination with higher k.

If parameter \strong{wsize} is set, query sequence will be split into chunks for processing.
That can speed up the execution and enable exporting results as a list, which is
useful in case a run with default parameters failed or took too long to finish.
Chunks are of length wsize, with a two-nucleotide overlap beetween consecutive
ones. Chosen value must satisfy the conditions \emph{wsize=(n*k)+2} and
\emph{length(query)>=2*wsize}. The downside is that last <wsize nucleotides of
query sequence will not be processed.

Setting \strong{output.list} to FALSE increases the runtime and memory consumption,
especially for longer sequences and higher tolerance values respectively . If the
execution failed with default parameters, try setting output.list to TRUE, or processing
your sequence in chunks.

Setting \strong{random.out} will increase speed in case output.list=FALSE. Recommended
if a random subset of matches is enough for your application or a run with random.out=NULL
already failed.

\strong{Lookup} table depends only on parameters scale and k. If you plan to apply the
function on multiple sequences without changing those two parameters, providing
lookup as parameter speeds up the process because the table isn't created anew
for each run.
}
\examples{
MatchBendability("TGATTCCTAAAGTCA", "con", k=1, tolerance=0.5)
MatchBendability("TGATTCCTAAAGTCA", "con", k=3, tolerance=0.1)
}
